; ModuleID = 'temp_opt.ll'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@ga = global i32 10, align 4
@gb = global i32 20, align 4
@gc = global i32 0, align 4
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @docomplex() #0 {
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  store i32 10, i32* %a, align 4
  store i32 20, i32* %b, align 4
  %1 = load i32, i32* %a, align 4
  %2 = load i32, i32* %b, align 4
  %3 = add nsw i32 %1, %2
  store i32 %3, i32* %c, align 4
  %4 = load i32, i32* %c
  store i32 %4, i32* %d, align 4
  %5 = load i32, i32* %c, align 4
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %5)
  %7 = load i32, i32* %d, align 4
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %7)
  %9 = load i32, i32* @ga, align 4
  %10 = load i32, i32* @gb, align 4
  %11 = add nsw i32 %9, %10
  store i32 %11, i32* @gc, align 4
  ret void
}

declare i32 @printf(i8*, ...) #1

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
  %1 = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %b2 = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %e = alloca i32, align 4
  %f = alloca i32, align 4
  %tmp = alloca i32, align 4
  %l = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %i = alloca i32, align 4
  %lt = alloca i32, align 4
  store i32 0, i32* %1, align 4
  call void @docomplex()
  store i32 10, i32* %a, align 4
  store i32 20, i32* %b, align 4
  store i32 20, i32* %b2, align 4
  %2 = load i32, i32* %a, align 4
  %3 = load i32, i32* %b, align 4
  %4 = add nsw i32 %2, %3
  store i32 %4, i32* %c, align 4
  %5 = load i32, i32* %c
  store i32 %5, i32* %d, align 4
  %6 = load i32, i32* %c, align 4
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %6)
  %8 = load i32, i32* %d, align 4
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %8)
  %10 = load i32, i32* %a, align 4
  %11 = load i32, i32* %b, align 4
  %12 = mul nsw i32 %11, 2
  %13 = add nsw i32 %10, %12
  %14 = load i32, i32* %c, align 4
  %15 = sdiv i32 8, %14
  %16 = sub nsw i32 %13, %15
  store i32 %16, i32* %e, align 4
  %17 = load i32, i32* %e
  store i32 %17, i32* %f, align 4
  %18 = load i32, i32* %e, align 4
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %18)
  %20 = load i32, i32* %f, align 4
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %20)
  %22 = load i32, i32* @gc
  store i32 %22, i32* %tmp, align 4
  %23 = load i32, i32* %tmp, align 4
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %23)
  store i32 10, i32* %l, align 4
  %25 = load i32, i32* %l, align 4
  %26 = icmp slt i32 %25, 10
  br i1 %26, label %27, label %31

; <label>:27                                      ; preds = %0
  %28 = load i32, i32* %c
  store i32 %28, i32* %k, align 4
  %29 = load i32, i32* %k, align 4
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %29)
  br label %37

; <label>:31                                      ; preds = %0
  %32 = load i32, i32* %a, align 4
  %33 = load i32, i32* %b2, align 4
  %34 = add nsw i32 %32, %33
  store i32 %34, i32* %m, align 4
  %35 = load i32, i32* %m, align 4
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %35)
  br label %37

; <label>:37                                      ; preds = %31, %27
  store i32 0, i32* %i, align 4
  br label %38

; <label>:38                                      ; preds = %45, %37
  %39 = load i32, i32* %i, align 4
  %40 = icmp slt i32 %39, 4
  br i1 %40, label %41, label %48

; <label>:41                                      ; preds = %38
  %42 = load i32, i32* %c
  store i32 %42, i32* %lt, align 4
  %43 = load i32, i32* %lt, align 4
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %43)
  br label %45

; <label>:45                                      ; preds = %41
  %46 = load i32, i32* %i, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %i, align 4
  br label %38

; <label>:48                                      ; preds = %38
  ret i32 0
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)"}
